--Data Cleaning / Filtering:

-- Remove rows with NULL values in crucial columns
DELETE FROM COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
WHERE COUNTRY IS NULL OR TOTAL_CASES IS NULL OR DATE IS NULL;


DELETE FROM COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
WHERE TOTAL_CASES < 1000;

--
DELETE FROM COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
WHERE DEATHS < 0;





-- Add a new column for Mortality Rate
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS MORTALITY_RATE FLOAT;

-- Calculate Mortality Rate (assuming DEATHS and TOTAL_CASES are not NULL)
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET MORTALITY_RATE = (DEATHS / TOTAL_CASES) * 100;









-- Statistical Analyis
SELECT AVG(TOTAL_CASES) AS AVERAGE_TOTAL_CASES
FROM COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS;

-- Find the country with the maximum deaths
SELECT COUNTRY, MAX(DEATHS) AS MAX_DEATHS
FROM COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
GROUP BY COUNTRY;





-- Add a new column for Cases per Day
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS CASES_PER_DAY FLOAT;

-- Calculate Cases per Day, handling division by zero
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET CASES_PER_DAY = CASE 
    WHEN DAYS_SINCE_LAST_REPORTED_CASE <> 0 THEN CASES_NEW / DAYS_SINCE_LAST_REPORTED_CASE
    ELSE NULL  -- or any default value you prefer
END;







-- Add a new column for High Mortality (1 if Mortality Rate > 2%, else 0)
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS HIGH_MORTALITY INT;

-- Set values for the High Mortality column
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET HIGH_MORTALITY = CASE WHEN MORTALITY_RATE > 2 THEN 1 ELSE 0 END;







-- Add a new column for the month
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS MONTH INTEGER;

-- Extract the month from the date
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET MONTH = MONTH(DATE::DATE);







-- Add a new column for normalized total cases
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS NORMALIZED_TOTAL_CASES FLOAT;

-- Add a new column for normalized deaths
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS NORMALIZED_DEATHS FLOAT;

-- Calculate normalized values (assuming some max values, you may need to adjust)
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET NORMALIZED_TOTAL_CASES = TOTAL_CASES / 100000;

UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET NORMALIZED_DEATHS = DEATHS / 5000;






-- Add a new column 'IN_EUROPE' to indicate whether the country is in Europe
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS IN_EUROPE BOOLEAN;

-- Update the 'IN_EUROPE' column based on the country's region
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET IN_EUROPE = CASE WHEN COUNTRY_REGION IN ('Europe', 'European Union') THEN TRUE ELSE FALSE END;







-- Add a new column 'CASES_DEATHS_DIFF' to store the difference between new cases and new deaths
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS CASES_DEATHS_DIFF INTEGER;

-- Update the 'CASES_DEATHS_DIFF' column
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET CASES_DEATHS_DIFF = CASES_NEW - DEATHS_NEW;





-- Add a new column 'CASE_CATEGORY' to categorize countries based on total cases
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS CASE_CATEGORY VARCHAR(50);

-- Update the 'CASE_CATEGORY' column
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET CASE_CATEGORY = 
  CASE 
    WHEN TOTAL_CASES > 100000 THEN 'High'
    WHEN TOTAL_CASES > 50000 THEN 'Medium'
    ELSE 'Low'
  END;




-- Add a new column for Encoded Transmission Classification
ALTER TABLE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
ADD COLUMN IF NOT EXISTS ENCODED_TRANSMISSION_CLASSIFICATION INTEGER;

-- Encode Transmission Classification
UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET ENCODED_TRANSMISSION_CLASSIFICATION =
  CASE
    WHEN TRANSMISSION_CLASSIFICATION = 'Community transmission' THEN 1
    WHEN TRANSMISSION_CLASSIFICATION = 'Clusters of cases' THEN 2
    WHEN TRANSMISSION_CLASSIFICATION = 'Sporadic cases' THEN 3
    ELSE 0 -- Handle other cases
  END;






-- UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
-- SET CASES_PER_DAY = IFNULL(CASES_PER_DAY, 0);



-- Select * from COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
-- Where COUNTRY_REGION = 'United States'
-- limit 1000




UPDATE COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS
SET DATE = DATEADD(YEAR, 1, DATE)
WHERE EXTRACT(YEAR FROM DATE) = 2020;



Select * from COVID_WORLDWIDE.CLEANED_WORLD_HEALTH_TESTS limit 100